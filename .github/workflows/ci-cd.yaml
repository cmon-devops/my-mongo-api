name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger workflow on push to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test  # Assuming you have a test script, replace or remove this if not needed

      - name: Build Docker image
        run: docker build -t mongo-api-repo .

      - name: Login to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 597088016131.dkr.ecr.us-east-1.amazonaws.com/mongo-api-repo

      - name: Push Docker image to AWS ECR
        run: |
          docker tag mongo-api-repo 597088016131.dkr.ecr.us-east-1.amazonaws.com/mongo-api-repo:latest
          docker push 597088016131.dkr.ecr.us-east-1.amazonaws.com/mongo-api-repo:latest

      - name: Create SSH key file
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/mongo-api-keypair.pem
          chmod 600 ~/mongo-api-keypair.pem

      - name: Deploy to AWS EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/mongo-api-keypair.pem ubuntu@34.207.254.124 <<EOF
          # Update package list
          sudo apt-get update

          # Install Docker if it's not installed
          if ! [ -x "$(command -v docker)" ]; then
            sudo apt-get install -y docker.io
          fi

          # Start Docker service
          sudo systemctl start docker
          sudo systemctl enable docker

          # Install AWS CLI
          if ! [ -x "$(command -v aws)" ]; then
            sudo apt-get install -y awscli
          fi

          # Configure AWS CLI
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1

          # Log in to ECR
          aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 597088016131.dkr.ecr.us-east-1.amazonaws.com

          # Pull the latest image from ECR
          sudo docker pull 597088016131.dkr.ecr.us-east-1.amazonaws.com/mongo-api-repo:latest
          
          # Stop and remove any existing container
          sudo docker stop my-mongo-api || true
          sudo docker rm my-mongo-api || true

          # Run the container
          sudo docker run -d -p 80:3000 --name my-mongo-api 597088016131.dkr.ecr.us-east-1.amazonaws.com/mongo-api-repo:latest
          EOF
